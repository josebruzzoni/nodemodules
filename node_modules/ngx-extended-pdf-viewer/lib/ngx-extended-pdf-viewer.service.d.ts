import { PDFPrintRange } from './options/pdf-print-range';
import * as ɵngcc0 from '@angular/core';
export interface FindOptions {
    highlightAll?: boolean;
    matchCase?: boolean;
    wholeWords?: boolean;
    ignoreAccents?: boolean;
    findMultipleSearchTexts?: boolean;
    fuzzySearch?: boolean;
}
export interface PDFExportScaleFactor {
    width?: number;
    height?: number;
    scale?: number;
}
export declare class NgxExtendedPdfViewerService {
    constructor();
    findMultiple(text: Array<string>, options?: FindOptions): boolean;
    find(text: string, options?: FindOptions): boolean;
    findNext(): boolean;
    findPrevious(): boolean;
    print(printRange?: PDFPrintRange): void;
    removePrintRange(): void;
    setPrintRange(printRange: PDFPrintRange): void;
    filteredPageCount(pageCount: number, range: PDFPrintRange): number;
    isInPDFPrintRange(pageIndex: number, printRange: PDFPrintRange): boolean;
    getPageAsText(pageNumber: number): Promise<string>;
    private convertTextInfoToText;
    getPageAsImage(pageNumber: number, scale: PDFExportScaleFactor): Promise<any>;
    private draw;
    private getPageDrawContext;
    getCurrentDocumentAsBlob(): Promise<Blob>;
    getFormData(): Promise<Array<Object>>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxExtendedPdfViewerService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgxExtendedPdfViewerService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWV4dGVuZGVkLXBkZi12aWV3ZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJuZ3gtZXh0ZW5kZWQtcGRmLXZpZXdlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUERGUHJpbnRSYW5nZSB9IGZyb20gJy4vb3B0aW9ucy9wZGYtcHJpbnQtcmFuZ2UnO1xuZXhwb3J0IGludGVyZmFjZSBGaW5kT3B0aW9ucyB7XG4gICAgaGlnaGxpZ2h0QWxsPzogYm9vbGVhbjtcbiAgICBtYXRjaENhc2U/OiBib29sZWFuO1xuICAgIHdob2xlV29yZHM/OiBib29sZWFuO1xuICAgIGlnbm9yZUFjY2VudHM/OiBib29sZWFuO1xuICAgIGZpbmRNdWx0aXBsZVNlYXJjaFRleHRzPzogYm9vbGVhbjtcbiAgICBmdXp6eVNlYXJjaD86IGJvb2xlYW47XG59XG5leHBvcnQgaW50ZXJmYWNlIFBERkV4cG9ydFNjYWxlRmFjdG9yIHtcbiAgICB3aWR0aD86IG51bWJlcjtcbiAgICBoZWlnaHQ/OiBudW1iZXI7XG4gICAgc2NhbGU/OiBudW1iZXI7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hFeHRlbmRlZFBkZlZpZXdlclNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgZmluZE11bHRpcGxlKHRleHQ6IEFycmF5PHN0cmluZz4sIG9wdGlvbnM/OiBGaW5kT3B0aW9ucyk6IGJvb2xlYW47XG4gICAgZmluZCh0ZXh0OiBzdHJpbmcsIG9wdGlvbnM/OiBGaW5kT3B0aW9ucyk6IGJvb2xlYW47XG4gICAgZmluZE5leHQoKTogYm9vbGVhbjtcbiAgICBmaW5kUHJldmlvdXMoKTogYm9vbGVhbjtcbiAgICBwcmludChwcmludFJhbmdlPzogUERGUHJpbnRSYW5nZSk6IHZvaWQ7XG4gICAgcmVtb3ZlUHJpbnRSYW5nZSgpOiB2b2lkO1xuICAgIHNldFByaW50UmFuZ2UocHJpbnRSYW5nZTogUERGUHJpbnRSYW5nZSk6IHZvaWQ7XG4gICAgZmlsdGVyZWRQYWdlQ291bnQocGFnZUNvdW50OiBudW1iZXIsIHJhbmdlOiBQREZQcmludFJhbmdlKTogbnVtYmVyO1xuICAgIGlzSW5QREZQcmludFJhbmdlKHBhZ2VJbmRleDogbnVtYmVyLCBwcmludFJhbmdlOiBQREZQcmludFJhbmdlKTogYm9vbGVhbjtcbiAgICBnZXRQYWdlQXNUZXh0KHBhZ2VOdW1iZXI6IG51bWJlcik6IFByb21pc2U8c3RyaW5nPjtcbiAgICBwcml2YXRlIGNvbnZlcnRUZXh0SW5mb1RvVGV4dDtcbiAgICBnZXRQYWdlQXNJbWFnZShwYWdlTnVtYmVyOiBudW1iZXIsIHNjYWxlOiBQREZFeHBvcnRTY2FsZUZhY3Rvcik6IFByb21pc2U8YW55PjtcbiAgICBwcml2YXRlIGRyYXc7XG4gICAgcHJpdmF0ZSBnZXRQYWdlRHJhd0NvbnRleHQ7XG4gICAgZ2V0Q3VycmVudERvY3VtZW50QXNCbG9iKCk6IFByb21pc2U8QmxvYj47XG4gICAgZ2V0Rm9ybURhdGEoKTogUHJvbWlzZTxBcnJheTxPYmplY3Q+Pjtcbn1cbiJdfQ==